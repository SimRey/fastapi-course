name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

  # -----------------------------
  # 2. BUILD & PUSH DOCKER IMAGE
  # -----------------------------
  build_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      # 1️⃣ Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # QEMU allows Docker to build images for multiple CPU architectures (x86, ARM, etc.)
        # Useful if your image needs to run on ARM devices (like Apple M1/M2)

      # 3️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # Buildx allows advanced Docker build features, like multi-arch builds and build caching

      # 4️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # These credentials must exist in GitHub secrets

      # 5️⃣ Build and push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/serverless-py:latest
          # Build cache to speed up future builds
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/serverless-py:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/serverless-py:buildcache,mode=max